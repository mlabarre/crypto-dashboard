<!DOCTYPE html>

<html lang="fr">
<head>
    <title>Evolution</title>
    <script type="text/javascript" src="/javascripts/jquery-3.7.1.min.js"></script>
    <script type="text/javascript" src="/javascripts/utils.js"></script>
    <link rel='stylesheet' id="theme" href='/stylesheets/style.css'/>
    <link rel='stylesheet' href='/stylesheets/all.min.css'/>
    <style>

        .container {
            display: flex;
            flex-direction: column;
            align-content: center;
            align-items: center;
            justify-content: center;
        }

        .sub-container {
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            flex-direction: column;
            width: 100%;
            min-width: 600px;
        }

        .num {
            text-align: right;
        }

        .rate {
            text-align: center;
        }

        .title-left {
            text-align: left
        }

        * {
            font-family: Helvetica, sans-serif;
        }

        .title-data {
            font-size: 18px;
            font-weight: bold;
        }

        .title-text {
            font-size: 18px;
        }

        .title, .title-alerts {
            flex: 1;
            font-size: 24px;
        }

        .title-alerts {
            color: cadetblue;
            margin-top: 10px;
        }

        .up {
            color: #2d9112;
        }

        .down {
            color: red;
        }

        .sizeup {
            font-size: 14px;
            cursor: pointer;
        }

        .sizedown {
            font-size: 10px;
            cursor: pointer;
        }

        .input {
            padding: 10px 10px;
            background-color: cadetblue;
            margin: 10px 10px;
            border-radius: 10px;
            display: flex;
            align-content: center;
            align-items: center;
            justify-content: left;
            justify-items: center;
            width: 600px;
        }

        .alerts {
            flex-flow: column;
            color: black;
        }

        .alert {
            color: green;
        }

        .percent {
            width: 60px;
            margin-left: 10px;
            margin-right: 10px;
        }

        .text, .text-mini {
            color: cadetblue;
        }

        .text-mini {
            font-style: italic;
            font-weight: lighter;
            font-size: 14px;
            margin-left: 15px;
            margin-right: 15px;
        }

        .cont-border {
            border-radius: 10px;
            border: 1px solid cadetblue;
            max-width: 800px;
        }

        .button-bloc {
            display: flex;
            flex-direction: row;
        }

        .button {
            margin: 10px;
        }

    </style>
</head>

<body>

<div class="container">

    <div w3-include-html="/html/fr/header.html"></div>

    <div class="sub-container non-alerts">
        <div class="title">
            <span class="title-text">Balance: </span><span id="amount" class="title-data"></span>
            <span class="title-text"> <%= fiat_symbol %>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Variation: </span>
            <span id="variation" class="title-data"></span>&nbsp;&nbsp;&nbsp;
            <span id="sizeup" class="sizeup">A</span>&nbsp;<span id="sizedown" class="sizedown">A</span>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="title-text" id="date"></span>
        </div>

        <table id="cryptos" class="styled-table">
            <thead>
            <th class="title-left clickable" onclick="sortTable('name')">Crypto</th>
            <th class="title-left clickable" onclick="sortTable('symbol')">Symbole</th>
            <th class="num clickable" onclick="sortTable('start_price')">Cours <%= fiat_symbol %> achat</th>
            <th class="num clickable" onclick="sortTable('start_price_usdt')">Cours USDT achat</th>
            <th class="num clickable" onclick="sortTable('quotation\n')">Cours <%= fiat_symbol %></th>
            <th class="num clickable" onclick="sortTable('quotation_usdt\n')">Cours USDT</th>
            <th class="num clickable" onclick="sortTable('tokens')">Tokens</th>
            <th class="num clickable" onclick="sortTable('value')">Valeur <%= fiat_symbol %></th>
            <th class="clickable" onclick="sortTable('variation')">Evol./achat</th>
            <th class="clickable" onclick="sortTable('variation_on_five_minutes')">Evol./5mn</th>
            <th class="clickable" onclick="sortTable('variation_on_one_hour')">Evol./1H</th>
            <th class="clickable" onclick="sortTable('variation_on_one_day')">Evol./24H</th>
            <th class="clickable" onclick="sortTable('variation_on_one_week')">Evol./sem</th>
            <th class="clickable" onclick="sortTable('wallet')">Wallet</th>
            <th class="clickable generalAlert"></th>
            <th></th>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div class="sub-container cont-border alerts">
        <div class="title-alerts one_token">Alerte pour le token <span id="alert_token"></span></div>
        <div class="title-alerts all_token">Alerte pour tous les tokens</div>
        <div class="text">
            <span>Envoyer une alerte si la variation du prix du token :</span>
        </div>
        <div class="input">
            a dépassé <input class="percent" type="number" id="alert_gt_5mn">% ou a perdu<input
                    class="percent" type="number" id="alert_lt_5mn">% en 5 minutes.
        </div>
        <div class="input">
            a dépassé <input class="percent" type="number" id="alert_gt_1h">% ou a perdu<input
                    class="percent" type="number" id="alert_lt_1h">% en 1 heure.
        </div>
        <div class="input">
            a dépassé <input class="percent" type="number" id="alert_gt_24h">% ou a perdu <input
                    class="percent" type="number" id="alert_lt_24h">% en 1 jour.
        </div>
        <div class="input">
            a dépassé <input class="percent" type="number" id="alert_gt_1w">% ou a perdu <input
                    class="percent" type="number" id="alert_lt_1w">% en 1 semaine.
        </div>
        <div class="text-mini">
            <span><i>Laisser à blanc les champs à ne pas prendre en compte</i></span>
        </div>
        <div class="button-bloc">
            <div>
                <input type="button" class="button" id="alertDel" onclick="delAlert();return false;" value="Supprimer">
            </div>
            <div>
                <input type="button" class="button" id="alertCancel" onclick="cancelAlert();return false;"
                       value="Annuler">
            </div>
            <div>
                <input type="button" class="button" id="alertAdd" onclick="addOrUpdateAlert();return false;"
                       value="Enregistrer">
            </div>
        </div>
        <div class="text-mini">
            Une alerte sur un token particulier prévaut sur une alerte globale.
        </div>
    </div>
</div>
</body>

<script type="text/javascript">

    let globalAlert = false;
    let globalAlertValue;
    let allAlerts = [];
    let tokenAlert = "";

    //
    // ALERTS
    //
    let showAllTokenAlertTitle = () => {
        $('.all_token').show();
        $('.one_token').hide();
    }

    let showOneTokenAlertTitle = () => {
        $('.all_token').hide();
        $('.one_token').show();
    }

    let initAlertsVariables = () => {
        $('#alert_gt_5mn').val('');
        $('#alert_lt_5mn').val('');
        $('#alert_gt_1h').val('');
        $('#alert_lt_1h').val('');
        $('#alert_gt_24h').val('');
        $('#alert_lt_24h').val('');
        $('#alert_gt_1w').val('');
        $('#alert_lt_1w').val('');
    }

    let setAlertsVariables = (alertToken) => {
        $('#alert_gt_5mn').val(alertToken.gt5mn < 0 ? '' : alertToken.gt5mn);
        $('#alert_lt_5mn').val(alertToken.lt5mn < 0 ? '' : alertToken.lt5mn);
        $('#alert_gt_1h').val(alertToken.gt1h < 0 ? '' : alertToken.gt1h);
        $('#alert_lt_1h').val(alertToken.lt1h < 0 ? '' : alertToken.lt1h);
        $('#alert_gt_24h').val(alertToken.gt24h < 0 ? '' : alertToken.gt24h);
        $('#alert_lt_24h').val(alertToken.lt24h < 0 ? '' : alertToken.lt24h);
        $('#alert_gt_1w').val(alertToken.gt1w < 0 ? '' : alertToken.gt1w);
        $('#alert_lt_1w').val(alertToken.lt1w < 0 ? '' : alertToken.lt1w);
    }

    let hideAlertPanel = () => {
        $('.alerts').hide();
        $('.non-alerts').show();
    }

    let initAlerts = () => {
        hideAlertPanel();
        tokenAlert = "";
        globalAlert = false;
        globalAlertValue;
        allAlerts = [];
    }

    // Called by icon click.
    let showAlertPanel = (token) => {
        tokenAlert = token;
        $('.alerts').show();
        $('.non-alerts').hide();
        $('#alertDel').hide();
        if (token === '_all_tokens_') {
            showAllTokenAlertTitle();
        } else {
            showOneTokenAlertTitle();
            $('#alert_token').text(token);
        }
        let alertToken = findAlertInArray(token);
        if (alertToken !== undefined) {
            setAlertsVariables(alertToken);
            $('#alertDel').show();
        } else {
            initAlertsVariables();
            $('#alertDel').hide();
        }
    }

    let findAlertInArray = (token) => {
        for (let i = 0; i < allAlerts.length; i++) {
            if (allAlerts[i].token === token) {
                return allAlerts[i];
            }
        }
    }

    let setAlerts = (alerts) => {
        allAlerts = alerts;
        globalAlertValue = findAlertInArray('_all_tokens_');
        globalAlert = globalAlertValue !== undefined;
    }

    let delAlert = () => {
        $.ajax(
            {
                url: `/api/alert?token=${tokenAlert}`,
                method: "DELETE",
                dataType: "json",
                success: (data) => {
                    getDatas();
                    hideAlertPanel();
                },
                error: (xhr, status, error) => {
                    console.log(error)
                }
            }
        )
    }

    let cancelAlert = () => {
        hideAlertPanel();
    }

    let addOrUpdateAlert = () => {
        let json = {
            token: tokenAlert,
            gt5mn: $('#alert_gt_5mn').val() === '' ? -1.0 : parseFloat($('#alert_gt_5mn').val()),
            lt5mn: $('#alert_lt_5mn').val() === '' ? -1.0 : parseFloat($('#alert_lt_5mn').val()),
            gt1h: $('#alert_gt_1h').val() === '' ? -1.0 : parseFloat($('#alert_gt_1h').val()),
            lt1h: $('#alert_lt_1h').val() === '' ? -1.0 : parseFloat($('#alert_lt_1h').val()),
            gt24h: $('#alert_gt_24h').val() === '' ? -1.0 : parseFloat($('#alert_gt_24h').val()),
            lt24h: $('#alert_lt_24h').val() === '' ? -1.0 : parseFloat($('#alert_lt_24h').val()),
            gt1w: $('#alert_gt_1w').val() === '' ? -1.0 : parseFloat($('#alert_gt_1w').val()),
            lt1w: $('#alert_lt_1w').val() === '' ? -1.0 : parseFloat($('#alert_lt_1w').val())
        }
        console.log(JSON.stringify(json))
        $.ajax(
            {
                url: "/api/alert",
                method: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: (data) => {
                    getDatas();
                    hideAlertPanel();
                },
                error: (xhr, status, error) => {
                    console.log(error)
                }
            }
        )
    }

    let setGeneralAlertIconHtml = () => {
        let html;
        if (globalAlert === true) {
            html = `<i class="fa-solid fa-bell alert clickable bell orange" onclick="showAlertPanel('_all_tokens_')" ` +
                `title="Voir ou changer l'alerte globale"></i>`;
        } else {
            html = `<i class="fa-solid fa-bell-slash alert clickable bell" onclick="showAlertPanel('_all_tokens_')" ` +
                `title="Mettre une alerte globale""></i>`;
        }
        $('.generalAlert').html(html);
        return html;
    }

    let buildAlertIconHtml = (token) => {
        let html;
        if (findAlertInArray(token) !== undefined) {
            html = `<i class="fa-solid fa-bell alert clickable bell orange" onclick="showAlertPanel('${token}')" ` +
                `title="Voir ou changer l'alerte sur ${token}"></i>`;
        } else {
            html = `<i class="fa-solid fa-bell-slash alert clickable bell" onclick="showAlertPanel('${token}')" ` +
                `title="Mettre une alerte sur ${token}"></i>`;
        }
        return html;
    }

    //
    // EVOLUTION
    //

    let lastSortField = "variation";
    let lastSortDirection = "D";
    let fontSize = 14;
    let ds = "<%= decimal_separator %>";

    let setDate = () => {
        document.getElementById('date').innerHTML = getFormattedDate('fr-FR');
    }

    let signRate = (rate) => {
        if (rate.indexOf("-") >= 0) {
            return '<span class="down">&searr;&nbsp;' + rate.substring(1).replace(".", ds) + ' %' + '</span>';
        } else {
            return '<span class="up">&nearr;&nbsp;' + rate.replace(".", ds) + ' %' + '</span>';
        }
    }

    let setBalance = (balance) => {
        $('#amount').text(formatDelim(balance.amount.toFixed(2), ds));
        $('#variation').html(signRate(balance.variation.toFixed(2)));
    }

    let fill = (data) => {
        $('.alerts').hide();
        setAlerts(data.result.alerts);
        setGeneralAlertIconHtml();
        let tokens = data.result.tokens;
        $.each(tokens, (no) => {
            let coin = tokens[no];
            if (coin.id !== "N/A") {
                $('#cryptos').append('<tr><td>' + coin.name + '</td>' +
                    '<td class="rate">' + coin.symbol.toUpperCase() + '</td>' +
                    '<td class="num">' + formatDelim(((coin.start_price * 100) / 100).toFixed(8), ds) + '</td>' +
                    '<td class="num">' + formatDelim(((coin.start_price_usdt * 100) / 100).toFixed(8), ds) + '</td>' +
                    '<td class="num">' + formatDelim(((coin.quotation * 100) / 100).toFixed(8), ds) + '</td>' +
                    '<td class="num">' + formatDelim(((coin.quotation_usdt * 100) / 100).toFixed(8), ds) + '</td>' +
                    '<td class="num">' + formatDelim(((coin.tokens * 10000) / 10000).toFixed(4), ds) + '</td>' +
                    '<td class="num">' + formatDelim((((coin.tokens * coin.quotation) * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + signRate(((coin.variation * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + signRate(((coin.variation_on_five_minutes * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + signRate(((coin.variation_on_one_hour * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + signRate(((coin.variation_on_one_day * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + signRate(((coin.variation_on_one_week * 100) / 100).toFixed(2), ds) + '</td>' +
                    '<td class="rate">' + getIconsHtml(coin.wallet) + '</td>' +
                    '<td class="rate">' + buildAlertIconHtml(coin.symbol.toUpperCase()) + '</td>' +
                    '<td class="rate">' + getInfoIconHtml(coin) + '</td>' +
                    '</tr>');
            } else {
                $('#cryptos').append(`<tr><td></td><td class="rate">${coin.symbol.toUpperCase()}</td>` +
                    `<td colspan="11">` +
                    `ICO ou pas encore listé ou non déclaré dans l'onglet Cryptos : ` +
                    `${formatDelim(((coin.tokens * 10000) / 10000).toFixed(4), ds)} tokens à ` +
                    `${formatDelim(((coin.start_price * 100) / 100).toFixed(8), ds)}` +
                    ` ${coin.currency}</td>` +
                    `<td class="rate">${getIconsHtml(coin.wallet)}</td><td></td><td></td></tr>`)
            }
        })
        setBalance(data.result.balance)
        changeBellSize();
    }

    let sortTable = (sortField) => {
        if (sortField === lastSortField) {
            lastSortDirection = lastSortDirection === "A" ? "D" : "A";
        }
        lastSortField = sortField;
        getDatas();
    }

    let showInfo = (coinId) => {
        window.location = `/showTokenInfo?id=${coinId}&returnUrl=/evolution&header=h-evolution`;
    }

    let getDatas = () => {
        $('#cryptos').find('tbody tr').remove();
        initAlerts();
        $.ajax(
            {
                url: "/api/evolution?sortField=" + lastSortField + "&sortDirection=" + lastSortDirection,
                method: "GET",
                dataType: "json",
                success: (data) => {
                    fill(data);
                },
                error: (xhr, status, error) => {
                    console.log(error)
                }
            }
        )
    }

    let changeBellSize = () => {
        const bells = document.querySelectorAll('.bell');
        bells.forEach(bell => {
            bell.style.fontSize = '16px';
        });
    }

    let changeTableFontSize = () => {
        document.getElementsByClassName("styled-table")[0].style["font-size"] = fontSize + "px";
    }

    let changeFontSize = (direction) => {
        if (direction === "up") {
            fontSize += 1;
        } else {
            if (fontSize >= 6) {
                fontSize -= 1;
            }
        }
        setEvolutionFontSize(fontSize);
        changeTableFontSize();
        changeBellSize();
    }

    let reload = () => {
        getDatas();
        setDate();
    }

    let refresh = "<%= refresh %>";

    let init = () => {
        reload();
        fontSize = getEvolutionFontSize();
        changeTableFontSize();
        setInterval(reload, parseInt(refresh) * 1000);
        $('#sizeup').on('click', () => {
            changeFontSize('up');
        });
        $('#sizedown').on('click', () => {
            changeFontSize('down');
        });
        return 1;
    }

    includeHTML("h-evolution").then(() => {
        handleDarkMode(document.getElementById('darkmode'));
    });


    $(() => {
        init()
    })
</script>

</html>

