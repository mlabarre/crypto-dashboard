<!DOCTYPE html>

<html lang="fr">
<head>
    <title>Liste des transactions</title>
    <script type="text/javascript" src="/javascripts/jquery-3.7.1.min.js"></script>
    <script type="text/javascript" src="/javascripts/utils.js"></script>
    <link rel='stylesheet' id="theme" href='/stylesheets/style.css'/>
    <link rel='stylesheet' href='/stylesheets/all.min.css'/>
    <link rel='stylesheet' href='/stylesheets/follow-transactions.css'/>
</head>

<body>

<form>

    <div class="container">

        <div w3-include-html="/html/fr/header.html"></div>

        <div class="fields">
            <label for="token">Token</label>
            <select class="field" type="text" name="token" id="token">
                <option value="">Tous</option>
            </select>
            <label for="wallet">Wallet</label>
            <select class="field" type="text" name="wallet" id="wallet">
                <option value="">Tous</option>
            </select>
            <div class="button-box title">
                <input class="button" type="button" name="validation" id="validation" value="Afficher">
            </div>
        </div>

        <table id="transactions" class="styled-table">
            <thead>
            <th style="display:none"></th>
            <th id="headerCol" class="title-left clickable">Transactions</th>
            <th></th>
            <th></th>
            </thead>
            <tbody></tbody>
        </table>

    </div>
</form>

</body>

<script type="text/javascript">

    let sortDirection = "A";

    let returnedSortDirection = "<%= sortDirection %>";
    let returnedToken = "<%= token %>";
    let returnedWallet = "<%= wallet %>";

    let fill = (data) => {
        $.each(data, (line) => {
            let row = `<tr><td style="display:none">${data[line].id}</td><td>${data[line].msg}</td>`;
            row += `<td><i onclick="deleteTransaction('${data[line].id}')" class="fa-regular fa-trash-can red" title="Supprimer cette transaction"></i></td>`
            row += `<td><i onclick="editTransaction('${data[line].id}')" class="fas fa-edit green" title="Modifier cette transaction"></i></td>`
            row += '</tr>';
            $('#transactions').append(row);
        })
    }

    let getMessageFromRow = (id) => {
        let t = document.getElementById('transactions');
        let n = t.rows.length;
        let i, s = null, tr, td;
        for (i = 0; i < n; i++) {
            tr = t.rows[i];
            if (tr.cells.length > 2) {
                td = tr.cells[0];
                if (td.innerText === id) {
                    return tr.cells[1].innerText
                }
            }
        }
        return '';
    }

    let deleteTransaction = (id) => {
        if (window.confirm(`Confirm transaction suppression de la transaction: ${getMessageFromRow(id)}`)) {
            $.ajax(
                {
                    type: "DELETE",
                    url: `/api/delete-transaction?id=${id}`,
                    contentType: "application/json; charset=utf-8"
                })
                .done((data) => {
                    getDatas();
                })
                .fail((error) => {
                    window.alert(error);
                })
        }
    }

    let editTransaction = (id) => {
        document.location.href = `/updateTransaction?id=${id}&lang=fr&sortDirection=${sortDirection}&token=${document.getElementById("token").value}` +
            `&wallet=${document.getElementById("wallet").value}`;
    }

    let getDatas = () => {
        $('#transactions').find('tbody tr').remove()
        $.ajax(
            {
                type: "GET",
                url: `/api/follow-token-on-wallet?lang=fr&sortDirection=${sortDirection}&token=${document.getElementById("token").value}` +
                    `&wallet=${document.getElementById("wallet").value}`,
                contentType: "application/json; charset=utf-8"
            })
            .done((data) => {
                $('#headerCol').text(`${data.length} transactions`);
                fill(data);
            })
            .fail((error) => {
                $('#message').text('error');
            })
    }

    let fillCombo = (id, data) => {
        let select = document.querySelector('#' + id);
        for (let i = 0; i < data.length; i++) {
            let option = document.createElement("option");
            option.text = data[i];
            option.value = data[i];
            select.add(option)
        }
    }

    let fillComboSymbols = (symbols) => {
        fillCombo("token", symbols);
    }
    let setSymbols = () => {
        $.ajax(
            {
                type: "GET",
                url: "/api/get-all-symbols",
                contentType: "application/json; charset=utf-8"
            })
            .done((data) => {
                fillComboSymbols(data);
            })
            .fail((error) => {
                $('#message').text('error');
            })
    }
    let fillComboWallets = (wallets) => {
        fillCombo("wallet", wallets);
    }
    let setWallets = () => {
        $.ajax(
            {
                type: "GET",
                url: "/api/get-all-wallets",
                contentType: "application/json; charset=utf-8"
            })
            .done((data) => {
                fillComboWallets(data);
            })
            .fail((error) => {
                $('#message').text('error');
            })
    }
    let init = () => {
        $('#headerCol').on('click', () => {
            sortDirection = (sortDirection === "A" ? "D" : "A");
            getDatas();
        })
        $('#validation').on('click', () => {
            getDatas();
        });
        if (returnedSortDirection !== "") {
            sortDirection = returnedSortDirection;
            $('#token').val(returnedToken);
            $('#wallet').val(returnedWallet);
            getDatas();
        }
        setSymbols();
        setWallets();
    }

    includeHTML("h-follow").then(() => {
        handleDarkMode(document.getElementById('darkmode'));
    });

    $(() => {
        init()
    });

</script>

</html>

